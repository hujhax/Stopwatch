!!!
/ HTML5 doctype
%html{"ng-app" => "StopwatchApp", "ng-controller" => "StopwatchController"}
  %head
    %title {{myStopwatch.data.value | minutes}} {{myStopwatch.data.symbol}} (Stopwatch)Â 
    %meta{:content => "text/html; charset=utf-8", "http-equiv" => "Content-type"}
      %meta{:content => "width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=0", :name => "viewport"}/
      :css
        /* Prevent copy paste for all elements except text fields */
        *  { -webkit-user-select:none; -webkit-tap-highlight-color:rgba(255, 255, 255, 0); }
        input, textarea  { -webkit-user-select:text; }
        body { background-color:white; color:black }
      /* %script{:src => "intelxdk.js"}/ */
      %link{:href => "./bower_components/bootstrap/dist/css/bootstrap.min.css", :rel => "stylesheet"}/
      %link{:href => "./bower_components/bootstrap/dist/css/bootstrap-theme.min.css", :rel => "stylesheet"}/
      %script{:src => "./bower_components/angular/angular.js"}
      %script{:src => "./bower_components/jquery/dist/jquery.js"}
      %script{:src => "./bower_components/bootstrap/dist/js/bootstrap.js"}
      %script{:src => "./bower_components/moment/moment.js"}
      %link{:href => "css/stopwatch.css", :rel => "stylesheet"}/
      %script{:src => "./js/angular-setup.js"}
      %script{:src => "./js/keyboard-manager.js"}
      %script{:src => "./js/stopwatch-controller.js"}
      %script{:src => "./js/stopwatch-service.js"}
      %script{:src => "./js/filters.js"}
      %script{:src => "./js/adjust-log-height.js"}
      %link{:href => "./stopwatch.png", :rel => "icon", :type => "image/png"}/
  %body
    %script{:src => "https://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"}
    / Include all compiled plugins (below), or include individual files as needed
    %script{:src => "js/bootstrap.min.js"}
    %div
      %div.stopwatch-container
        %div{"ng-switch" => "", :on => "myStopwatch.data.isPositive"}
          %div{"ng-switch-default" => ""}
            %h1.time {{myStopwatch.data.value | minutes}}
          %div{"ng-switch-when" => "false"}
            %h1.time-expired {{myStopwatch.data.value | minutes}}
        %span
          %button.btn.btn-lg.btn-default{"ng-click" => "startStopwatch(5)", :type => "button"} <u>5</u> min
          %button.btn.btn-lg.btn-default{"ng-click" => "startStopwatch(10)", :type => "button"} <u>1</u>0 min
          %button.btn.btn-lg.btn-default{"ng-click" => "startStopwatch(30)", :type => "button"} <u>3</u>0 min
          %input.form-control{"ng-model" => "customTime", :style => "width: 100px; display: inline-block;", :type => "text"}/
          %button.btn.btn-lg.btn-default{"ng-click" => "startStopwatch(customTime)", :type => "button"} <u>C</u>ustom
          %button.btn.btn-lg{"ng-click" => "toggleStopwatch()", :type => "button" {myStopwatch.data.running ? {class: "btn-danger"} : {class: "btn-success"}}} {{myStopwatch.data.running | iif : "Pause" : "Resume"}}
          %button.btn.btn-lg.btn-default{"ng-click" => "clearStopwatch()", :type => "button"} Clear
        %br
        %br
        %div.log
          %div{"ng-repeat-start" => "message in myStopwatch.data.messages"}
          {{message}}
          %div{"ng-repeat-end" => ""}